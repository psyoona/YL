# Edge가 <sub>-nginx:8080 으로 접근하므로,
# 이 컨테이너(Nginx)는 외부 80/443이 아니라 내부 포트 8080만 리슨
# app_upstream 블록은 백엔드 Kestrel 앱(app:8080)으로 프록시 연결 정의
upstream app_upstream {
  server app:8080;       # docker-compose의 'app' 서비스 컨테이너와 포트 매핑
  keepalive 32;          # 연결 재사용을 위해 최대 32개의 keep-alive 연결 유지
}

server {
  listen 8080;           # 이 nginx 인스턴스는 Edge에서만 접근하므로 8080 포트에서만 대기
  server_name _;         # 기본 서버 블록 (_ 는 모든 호스트 매칭)

  # --- 앱 준비 전 발생할 수 있는 초기 502 에러를 줄이기 위한 설정 ---
  proxy_connect_timeout 5s;  # 백엔드 연결 시도 제한 시간 (연결 실패 시 502 발생 가능)
  proxy_read_timeout    60s; # 백엔드 응답 읽기 제한 시간

  location / {
    proxy_http_version 1.1;  # HTTP/1.1 사용 (keep-alive, chunked encoding 가능)
    proxy_set_header Connection "";  # 기존 Connection 헤더 제거(keep-alive 활성화 목적)

    # --- 원본 요청 정보 전달 ---
    proxy_set_header Host              $host;                       # 원래 요청 Host
    proxy_set_header X-Real-IP         $remote_addr;                 # 클라이언트 실제 IP
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;   # 프록시 경유 IP 목록
    proxy_set_header X-Forwarded-Proto $scheme;                      # 원본 프로토콜(http/https)

    # --- 백엔드로 요청 전달 ---
    proxy_pass http://app_upstream;  # 위 upstream 블록(app:8080)으로 전달
  }

  # --- 헬스체크 엔드포인트 ---
  # /healthz 경로가 앱에서 구현되어 있으면 상태 체크 시 그대로 통과시킴
  # 예: Kubernetes, Docker Healthcheck 등에서 사용 가능
  location = /healthz {
    proxy_pass http://app_upstream/healthz;
    proxy_set_header Host $host;
  }
}
