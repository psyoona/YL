user  nginx;
# IIS 워커 프로세스에 대응되는 개념. auto 로 설정 시 CPU 코어 수에 맞춰 자동 설정
# 예를 들어 4코어 CPU라면 4개의 워커 프로세스가 생성됨
worker_processes  auto;

events {
    # Nginx의 각 워커 프로세스가 동시에 처리할 수 있는 연결의 최대치
    # 예를 들어 4코어 기준 4 x 1024 = 4096개의 동시 연결을 처리할 수 있음
    # 단 os 파일 디스크립터 제한 등으로 실제는 더 적을 수 있음
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile      on;
    keepalive_timeout  65;
    client_max_body_size 50m;

    # W3C 유사 포맷
    log_format w3c '$time_local $server_addr '
                   '$request_method $http_host $uri $args '
                   '$remote_addr "$http_user_agent" '
                   '$status $body_bytes_sent $request_length '
                   '$request_time $upstream_response_time';

    access_log /var/log/nginx/access.log w3c;
    error_log  /var/log/nginx/error.log  warn;

    # --- HTTP :80 ---
    server {
        listen 80;
        server_name docker.yoonslab.com;

        location / {
            proxy_set_header Host              $host;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_http_version 1.1;
            proxy_read_timeout  60s;
            proxy_send_timeout  60s;

            proxy_pass http://app:8080;
        }
    }

    # --- “포트만 443” (TLS 종료가 외부에서 이뤄지는 경우에 사용) ---
    # 여기서는 인증서 설정 없이 443을 그대로 리슨합니다.
    # Nginx 자체에서 TLS를 처리하려면 아래 listen을 `listen 443 ssl http2;` 로 바꾸고
    # ssl_certificate / ssl_certificate_key 를 추가해야 합니다.
    server {
        listen 443;
        server_name docker.yoonslab.com;

        location / {
            proxy_set_header Host              $host;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_http_version 1.1;
            proxy_read_timeout  60s;
            proxy_send_timeout  60s;

            proxy_pass http://app:8080;
        }
    }

    include /etc/nginx/conf.d/*.conf;
}
